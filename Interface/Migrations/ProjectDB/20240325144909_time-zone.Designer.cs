// <auto-generated />
using System;
using Interface.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Interface.Migrations.ProjectDB
{
    [DbContext(typeof(ProjectDBContext))]
    [Migration("20240325144909_time-zone")]
    partial class timezone
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Entity.AccessLevelEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("AccessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActiveUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserSetting", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.CategoryEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.CityEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CityName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("County")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("StateId");

                    b.ToTable("Cities", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.CustomerEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.CustomerOrderToEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<bool>("IsProject")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.HasIndex("FactorID");

                    b.ToTable("CustomerOrderTo", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.CustomerRequestEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("CrateUser")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CustomerRequests", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.CustomerRequest_ItemEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<long>("CustomerRequestID")
                        .HasColumnType("bigint");

                    b.Property<int>("CustomerRequestID1")
                        .HasColumnType("int");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerRequestID1");

                    b.HasIndex("ItemID");

                    b.ToTable("CustomerRequest_Items", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.EmailNotificationEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<string>("NotificationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("EmailNotification", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.EmailSettingEnt", b =>
                {
                    b.Property<byte>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("ID"));

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortNumber")
                        .HasColumnType("int");

                    b.Property<string>("ReciverEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SSLEnable")
                        .HasColumnType("bit");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseEmailService")
                        .HasColumnType("bit");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EmailSetting", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.EmployeeRating", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RequestEstimateAppointmentID")
                        .HasColumnType("bigint");

                    b.Property<long>("RequestInstallerAppointmentID")
                        .HasColumnType("bigint");

                    b.Property<byte>("Score")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EmployeeRating", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.EstimateAppointmentEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AppoitmentStatus")
                        .HasColumnType("int");

                    b.Property<bool>("Close")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CompleteProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompleteProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndAppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstimatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GetStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GetStartLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InCompleteProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InCompleteProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OnWayTimeMin")
                        .HasColumnType("int");

                    b.Property<long>("RequestEstimateAppointmentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkTimeMin")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RequestEstimateAppointmentID");

                    b.ToTable("EstimateAppointments", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ExpenseEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CheckInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExpenseProductID")
                        .HasColumnType("int");

                    b.Property<int?>("ExpenseTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("FactorID")
                        .HasColumnType("int");

                    b.Property<int?>("PayAccountID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VandorId")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ExpenseProductID");

                    b.HasIndex("ExpenseTypeID");

                    b.HasIndex("FactorID");

                    b.HasIndex("PayAccountID");

                    b.HasIndex("PaymentTypeID");

                    b.HasIndex("VandorId");

                    b.ToTable("Expenses", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ExpenseProductEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ExpenseProducts", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ExpenseTypeEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("ExpenseTypes", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.FabricationCategoryEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FabricationCategories", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.FabricationEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FabricationCategoryID")
                        .HasColumnType("int");

                    b.Property<double>("PerUnit")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FabricationCategoryID");

                    b.ToTable("Fabrications", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.FabricationPriceEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FabricationID")
                        .HasColumnType("int");

                    b.Property<int>("GlassStrengthID")
                        .HasColumnType("int");

                    b.Property<int>("GlassThicknesID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<byte>("Sqf25")
                        .HasColumnType("tinyint");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FabricationID");

                    b.HasIndex("GlassThicknesID");

                    b.ToTable("FabricationPrices", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AppoitmentChangesView")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ContractChangesView")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ContractText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditCardCustomerID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreditCardView")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FactorChangesView")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FactorInstallTime")
                        .HasColumnType("int");

                    b.Property<int>("FactorLaberNumber")
                        .HasColumnType("int");

                    b.Property<double>("FactorPrice")
                        .HasColumnType("float");

                    b.Property<string>("FactorTechnicalNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FourthPaymentPercent")
                        .HasColumnType("float");

                    b.Property<string>("GalleryChangesView")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCommerical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("bit");

                    b.Property<int>("MAX_L")
                        .HasColumnType("int");

                    b.Property<double>("MinimumPaymentPercent")
                        .HasColumnType("float");

                    b.Property<string>("NoteChangesView")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("OrderChangesView")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("PONumber")
                        .HasColumnType("int");

                    b.Property<double>("PaidPrice")
                        .HasColumnType("float");

                    b.Property<bool>("PayCash")
                        .HasColumnType("bit");

                    b.Property<bool>("PayCheck")
                        .HasColumnType("bit");

                    b.Property<bool>("PayCreditCard")
                        .HasColumnType("bit");

                    b.Property<int>("PayType")
                        .HasColumnType("int");

                    b.Property<string>("PaymentChangesView")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("PaymentTerms")
                        .HasColumnType("int");

                    b.Property<bool>("Pin")
                        .HasColumnType("bit");

                    b.Property<int>("PinOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlaceOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrintName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateID")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Remaining")
                        .HasColumnType("float");

                    b.Property<long>("RequestEstimateID")
                        .HasColumnType("bigint");

                    b.Property<int>("SUM_HL")
                        .HasColumnType("int");

                    b.Property<int>("SUM_QHL")
                        .HasColumnType("int");

                    b.Property<double>("SecondPaymentPercent")
                        .HasColumnType("float");

                    b.Property<bool>("Signed")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<int>("TaxableFactorPrice")
                        .HasColumnType("int");

                    b.Property<double>("ThirdPaymentPercent")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseDiffrentContract")
                        .HasColumnType("bit");

                    b.Property<string>("WorkFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Factors", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorInstallerEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<string>("InstallerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FactorID");

                    b.ToTable("FactorInstaller", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorItemTimeEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("AppointmentID")
                        .HasColumnType("bigint");

                    b.Property<int>("AppoitmentType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompleteItemDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompleteItemLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Factor_ItemID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InCompleteItemDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InCompleteItemLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartItemLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartItetmDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("WorkTimeMin")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Factor_ItemID");

                    b.ToTable("FactorItemTimes", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorItem_ImageEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Customers")
                        .HasColumnType("bit");

                    b.Property<bool>("Estimators")
                        .HasColumnType("bit");

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<long?>("Factor_ItemID")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Installers")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UploadItemType")
                        .HasColumnType("int");

                    b.Property<bool>("Vandors")
                        .HasColumnType("bit");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Factor_ItemID");

                    b.ToTable("FactorItem_Images", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorJobTypeEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<int>("JobTypeID")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FactorID");

                    b.HasIndex("JobTypeID");

                    b.ToTable("FactorJobTypes", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorNoteEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int?>("FactorID")
                        .HasColumnType("int");

                    b.Property<long>("FactorTaskID")
                        .HasColumnType("bigint");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FactorID");

                    b.ToTable("FactorNotes", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorTaskEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeID")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskMode")
                        .HasColumnType("int");

                    b.Property<int>("TaskType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UserFullName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FactorTasks", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.Factor_ItemEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int>("EachPrice")
                        .HasColumnType("int");

                    b.Property<int>("FacrorID")
                        .HasColumnType("int");

                    b.Property<int>("InstallTime")
                        .HasColumnType("int");

                    b.Property<bool>("IsItemAdded")
                        .HasColumnType("bit");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<double>("ItemNumber")
                        .HasColumnType("float");

                    b.Property<int>("ItemStatus")
                        .HasColumnType("int");

                    b.Property<string>("ItemText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTextVandorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LaberNumber")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShippingID")
                        .HasColumnType("int");

                    b.Property<bool>("Taxable")
                        .HasColumnType("bit");

                    b.Property<string>("TechnicalNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("VandorID")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemID");

                    b.HasIndex("ShippingID");

                    b.HasIndex("VandorID");

                    b.ToTable("Factor_Items", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassExtraPriceEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GlassExtraPrices", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassOptionEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GlassOptions", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassPriceEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("GlassOptionID")
                        .HasColumnType("int");

                    b.Property<int>("GlassStrengthID")
                        .HasColumnType("int");

                    b.Property<int>("GlassThicknesID")
                        .HasColumnType("int");

                    b.Property<int>("GlassTypeID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GlassOptionID");

                    b.ToTable("GlassPrices", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassStrengthEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GlassStrengths", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassThicknesEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GlassThicknes", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassTypeEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GlassTypes", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassType_OptionEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("GlassOptionID")
                        .HasColumnType("int");

                    b.Property<int>("GlassTypeID")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GlassOptionID");

                    b.HasIndex("GlassTypeID");

                    b.ToTable("GlassType_Option", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassType_StrengthEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("GlassStrengthID")
                        .HasColumnType("int");

                    b.Property<int>("GlassTypeID")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GlassStrengthID");

                    b.HasIndex("GlassTypeID");

                    b.ToTable("GlassType_Strength", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassType_ThicknesEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("GlassThicknesID")
                        .HasColumnType("int");

                    b.Property<int>("GlassTypeID")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GlassThicknesID");

                    b.HasIndex("GlassTypeID");

                    b.ToTable("GlassType_Thicknes", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.Glass_FabricationEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FabricationID")
                        .HasColumnType("int");

                    b.Property<int>("GlassTypeID")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FabricationID");

                    b.HasIndex("GlassTypeID");

                    b.ToTable("Glass_Fabrications", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.HelpEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("HelpContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelpTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelpURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Helps", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.InstallerAppointmentEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AppoitmentStatus")
                        .HasColumnType("int");

                    b.Property<bool>("Close")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CompleteProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompleteProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndAppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GetStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GetStartLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InCompleteProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InCompleteProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OnWayTimeMin")
                        .HasColumnType("int");

                    b.Property<long>("RequestInstallerAppointmentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkTimeMin")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("InstallerAppointments", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ItemCategoryEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ItemCategories", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ItemEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemCategoryID");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ItemModifireAnswerEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AnsweredDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerRequestID")
                        .HasColumnType("bigint");

                    b.Property<long>("Factor_ItemID")
                        .HasColumnType("bigint");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ItemModifireID")
                        .HasColumnType("bigint");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemModifireID");

                    b.ToTable("ItemModifireAnswers", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ItemModifireEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("AnswerForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DontSendToVandor")
                        .HasColumnType("bit");

                    b.Property<string>("EditableForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("FormTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmitTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemCategoryID");

                    b.ToTable("ItemModofires", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.Item_ItemModifireEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("ItemModifireID")
                        .HasColumnType("bigint");

                    b.Property<long>("Item_ID")
                        .HasColumnType("bigint");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemModifireID");

                    b.ToTable("Item_ItemModifire", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.JobTypeEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("HideForCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("JobTypes", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.LaborCostEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Hours")
                        .HasColumnType("float");

                    b.Property<string>("Labors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FactorID");

                    b.ToTable("LaborCosts", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.LastActivityEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LastActivities", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.LogEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.MsgNotificationEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("AlertIDs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadIDs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("forAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("forAll")
                        .HasColumnType("bit");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MsgNotifications", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.OrderEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<bool>("Delivered")
                        .HasColumnType("bit");

                    b.Property<string>("DeliveredUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EDDDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("FactorItemID")
                        .HasColumnType("bigint");

                    b.Property<double>("ItemNumber")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PDF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReciveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShippingID")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vandorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.OrderNoteEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrdreID")
                        .HasColumnType("bigint");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("OrderNotes", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.PageViewStatisticsEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PageViewStatistics", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.PayAccountEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PayAccounts", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.PaymentEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("ConfirmUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<string>("FileCheck")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileCheckBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayType")
                        .HasColumnType("int");

                    b.Property<string>("PaymentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VendorSent")
                        .HasColumnType("bit");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FactorID");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.PaymentTypeEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PaymentTypes", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.PlaidAccountEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Addresses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Available")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Current")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Emails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISOCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Mask")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Names")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaidPublicTokenID")
                        .HasColumnType("int");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnofficialCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PlaidPublicTokenID");

                    b.ToTable("PlaidAccounts", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.PlaidPublicTokenEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AddAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("AddTransaction")
                        .HasColumnType("bit");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PlaidPublicTokens", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.PlaidTransactionEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<bool>("AddToExpense")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaidAccountID")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PlaidAccountID");

                    b.ToTable("PlaidTransactions", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ProductCategoryEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProductCategories", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ProductEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ProductCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProductCategoryID");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ProviderEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comapny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estimator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsurancePolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Licence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Providers", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.PublicChatEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TagProjects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagUsers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PublicChats", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ReportEmailEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Delete")
                        .HasColumnType("bit");

                    b.Property<string>("MemberID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReciverEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReciverFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ReportEmail", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.RequestEstimateAppointmentEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BookDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Canceled")
                        .HasColumnType("bit");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShippSameBill")
                        .HasColumnType("bit");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.ToTable("RequestEstimateAppointments", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.RequestInstallerAppointmentEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("BookDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Confirmed")
                        .HasColumnType("int");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<int>("InstallTime")
                        .HasColumnType("int");

                    b.Property<string>("InstallerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FactorID");

                    b.ToTable("RequestInstallerAppointments", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ResellerPermitEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResellerPermit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ResellerPermits", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.RolePermisionEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ActionCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Delete")
                        .HasColumnType("bit");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<string>("RoleID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Write")
                        .HasColumnType("bit");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("RolePermisions", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.SettingEnt", b =>
                {
                    b.Property<byte>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("ID"));

                    b.Property<bool>("AutoConfirmAppt")
                        .HasColumnType("bit");

                    b.Property<int>("BenefitsPercentage")
                        .HasColumnType("int");

                    b.Property<int>("BreakTime")
                        .HasColumnType("int");

                    b.Property<double>("Buile")
                        .HasColumnType("float");

                    b.Property<double>("Buile2")
                        .HasColumnType("float");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditCardFee")
                        .HasColumnType("int");

                    b.Property<string>("DefaultWebSiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifrentCalendarTime")
                        .HasColumnType("int");

                    b.Property<bool>("DownloadForce")
                        .HasColumnType("bit");

                    b.Property<bool>("DownloadForce2")
                        .HasColumnType("bit");

                    b.Property<string>("DownloadLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadLink2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimateInterval")
                        .HasColumnType("int");

                    b.Property<bool>("FirstCalendar")
                        .HasColumnType("bit");

                    b.Property<int>("InstallerInterval")
                        .HasColumnType("int");

                    b.Property<int>("JobTaskEndTime")
                        .HasColumnType("int");

                    b.Property<int>("JobTaskInterval")
                        .HasColumnType("int");

                    b.Property<int>("JobTaskStartTime")
                        .HasColumnType("int");

                    b.Property<double>("LaborCostPerHour")
                        .HasColumnType("float");

                    b.Property<int>("LoginTimeout")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentText1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentText2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentText3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentText4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentText5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaidClientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaidSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReciverEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shoplatitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shoplongitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ShowStatus0")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus10")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus11")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus12")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus13")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus14")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus15")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus16")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus17")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus18")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus19")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus20")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus21")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus22")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus23")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus24")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus25")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus26")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus27")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus28")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus29")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus30")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus31")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus32")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus33")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus34")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus35")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus36")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus6")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus7")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus8")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatus9")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShowStatusIncompletePayment")
                        .HasColumnType("tinyint");

                    b.Property<bool>("ShowTableFutureTasks")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTableGalleries")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTableJobStatuses")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTableLastPayments")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTableOverview")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTablePaymentAgo")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTablePaymentLeft")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTableRecentActivity")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTableSearch")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTableSortedProject")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTableTimeCard")
                        .HasColumnType("bit");

                    b.Property<string>("StripePrivateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StripePublicKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitFuleSurcharge")
                        .HasColumnType("int");

                    b.Property<string>("UpdateDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Version")
                        .HasColumnType("float");

                    b.Property<double>("Version2")
                        .HasColumnType("float");

                    b.Property<int>("jobStatusCountingDays")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Setting", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.ShippingEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Shipping", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.StateEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("States", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.StatusNotificationEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NotificationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("StatusNotifications", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.SubmitSignEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("ElectronicSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ElectronicSignatureByte")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("FactorID")
                        .HasColumnType("int");

                    b.Property<string>("PrintName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FactorID");

                    b.ToTable("SubmitSigns", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.TaskEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppoitmentStatus")
                        .HasColumnType("int");

                    b.Property<bool>("Close")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CompleteProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompleteProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GetStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GetStartLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InCompleteProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InCompleteProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OnWayTimeMin")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<int>("WorkTimeMin")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.TimeCardEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("BreakFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BreakStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClockInLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClockInTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClockOutLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClockOutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LunchFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LunchStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TimeCards", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.ToolsEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("CarearDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarearID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCarearID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tools")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tools", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.UserJobTypeEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("JobTypeID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("JobTypeID");

                    b.ToTable("UserJobTypes", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.VandorEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Vandors", "dbo");
                });

            modelBuilder.Entity("Infrastructure.Entity.WorkSchedulingEnt", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EndHour")
                        .HasColumnType("int");

                    b.Property<int>("EndMin")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StartHour")
                        .HasColumnType("int");

                    b.Property<int>("StartMin")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("modifiedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("WorkSchedulings", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entity.CityEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.StateEnt", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("Infrastructure.Entity.CustomerOrderToEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.CityEnt", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.FactorEnt", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("Infrastructure.Entity.CustomerRequest_ItemEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.CustomerRequestEnt", "CustomerRequest")
                        .WithMany()
                        .HasForeignKey("CustomerRequestID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.ItemEnt", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerRequest");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Infrastructure.Entity.EstimateAppointmentEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.RequestEstimateAppointmentEnt", "RequestEstimateAppointment")
                        .WithMany()
                        .HasForeignKey("RequestEstimateAppointmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestEstimateAppointment");
                });

            modelBuilder.Entity("Infrastructure.Entity.ExpenseEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.CategoryEnt", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("Infrastructure.Entity.ExpenseProductEnt", "ExpenseProduct")
                        .WithMany()
                        .HasForeignKey("ExpenseProductID");

                    b.HasOne("Infrastructure.Entity.ExpenseTypeEnt", "ExpenseType")
                        .WithMany()
                        .HasForeignKey("ExpenseTypeID");

                    b.HasOne("Infrastructure.Entity.FactorEnt", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorID");

                    b.HasOne("Infrastructure.Entity.PayAccountEnt", "PayAccount")
                        .WithMany()
                        .HasForeignKey("PayAccountID");

                    b.HasOne("Infrastructure.Entity.PaymentTypeEnt", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeID");

                    b.HasOne("Infrastructure.Entity.VandorEnt", "Vandor")
                        .WithMany()
                        .HasForeignKey("VandorId");

                    b.Navigation("Category");

                    b.Navigation("ExpenseProduct");

                    b.Navigation("ExpenseType");

                    b.Navigation("Factor");

                    b.Navigation("PayAccount");

                    b.Navigation("PaymentType");

                    b.Navigation("Vandor");
                });

            modelBuilder.Entity("Infrastructure.Entity.ExpenseTypeEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.CategoryEnt", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Infrastructure.Entity.FabricationEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FabricationCategoryEnt", "FabricationCategory")
                        .WithMany()
                        .HasForeignKey("FabricationCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FabricationCategory");
                });

            modelBuilder.Entity("Infrastructure.Entity.FabricationPriceEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FabricationEnt", "Fabrication")
                        .WithMany()
                        .HasForeignKey("FabricationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.GlassThicknesEnt", "GlassThicknes")
                        .WithMany()
                        .HasForeignKey("GlassThicknesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabrication");

                    b.Navigation("GlassThicknes");
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorInstallerEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FactorEnt", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorItemTimeEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.Factor_ItemEnt", "Factor_Item")
                        .WithMany()
                        .HasForeignKey("Factor_ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factor_Item");
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorItem_ImageEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.Factor_ItemEnt", "Factor_Item")
                        .WithMany()
                        .HasForeignKey("Factor_ItemID");

                    b.Navigation("Factor_Item");
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorJobTypeEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FactorEnt", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.JobTypeEnt", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factor");

                    b.Navigation("JobType");
                });

            modelBuilder.Entity("Infrastructure.Entity.FactorNoteEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FactorEnt", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorID");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("Infrastructure.Entity.Factor_ItemEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.ItemEnt", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.ShippingEnt", "Shipping")
                        .WithMany()
                        .HasForeignKey("ShippingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.VandorEnt", "Vandor")
                        .WithMany()
                        .HasForeignKey("VandorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Shipping");

                    b.Navigation("Vandor");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassPriceEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.GlassOptionEnt", "GlassOption")
                        .WithMany()
                        .HasForeignKey("GlassOptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlassOption");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassType_OptionEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.GlassOptionEnt", "GlassOption")
                        .WithMany()
                        .HasForeignKey("GlassOptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.GlassTypeEnt", "GlassType")
                        .WithMany()
                        .HasForeignKey("GlassTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlassOption");

                    b.Navigation("GlassType");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassType_StrengthEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.GlassStrengthEnt", "GlassStrength")
                        .WithMany()
                        .HasForeignKey("GlassStrengthID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.GlassTypeEnt", "GlassType")
                        .WithMany()
                        .HasForeignKey("GlassTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlassStrength");

                    b.Navigation("GlassType");
                });

            modelBuilder.Entity("Infrastructure.Entity.GlassType_ThicknesEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.GlassThicknesEnt", "GlassThicknes")
                        .WithMany()
                        .HasForeignKey("GlassThicknesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.GlassTypeEnt", "GlassType")
                        .WithMany()
                        .HasForeignKey("GlassTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlassThicknes");

                    b.Navigation("GlassType");
                });

            modelBuilder.Entity("Infrastructure.Entity.Glass_FabricationEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FabricationEnt", "Fabrication")
                        .WithMany()
                        .HasForeignKey("FabricationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entity.GlassTypeEnt", "GlassType")
                        .WithMany()
                        .HasForeignKey("GlassTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabrication");

                    b.Navigation("GlassType");
                });

            modelBuilder.Entity("Infrastructure.Entity.ItemEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.ItemCategoryEnt", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemCategory");
                });

            modelBuilder.Entity("Infrastructure.Entity.ItemModifireAnswerEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.ItemModifireEnt", "ItemModifire")
                        .WithMany()
                        .HasForeignKey("ItemModifireID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemModifire");
                });

            modelBuilder.Entity("Infrastructure.Entity.ItemModifireEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.ItemCategoryEnt", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemCategory");
                });

            modelBuilder.Entity("Infrastructure.Entity.Item_ItemModifireEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.ItemModifireEnt", "ItemModifire")
                        .WithMany()
                        .HasForeignKey("ItemModifireID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemModifire");
                });

            modelBuilder.Entity("Infrastructure.Entity.LaborCostEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FactorEnt", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("Infrastructure.Entity.PaymentEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FactorEnt", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("Infrastructure.Entity.PlaidAccountEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.PlaidPublicTokenEnt", "PlaidPublicToken")
                        .WithMany()
                        .HasForeignKey("PlaidPublicTokenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlaidPublicToken");
                });

            modelBuilder.Entity("Infrastructure.Entity.PlaidTransactionEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.PlaidAccountEnt", "PlaidAccount")
                        .WithMany()
                        .HasForeignKey("PlaidAccountID");

                    b.Navigation("PlaidAccount");
                });

            modelBuilder.Entity("Infrastructure.Entity.ProductEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.ProductCategoryEnt", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Infrastructure.Entity.RequestEstimateAppointmentEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.CityEnt", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Infrastructure.Entity.RequestInstallerAppointmentEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FactorEnt", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("Infrastructure.Entity.SubmitSignEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.FactorEnt", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("Infrastructure.Entity.UserJobTypeEnt", b =>
                {
                    b.HasOne("Infrastructure.Entity.JobTypeEnt", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobType");
                });
#pragma warning restore 612, 618
        }
    }
}
